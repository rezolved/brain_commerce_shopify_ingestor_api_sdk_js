/**
 * Brain Commerce Shopify Ingestor API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrainCommerceShopifyIngestorApi);
  }
}(this, function(expect, BrainCommerceShopifyIngestorApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrainCommerceShopifyIngestorApi.ContentApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContentApi', function() {
    describe('createContentByTitle', function() {
      it('should call createContentByTitle successfully', function(done) {
        //uncomment below and update the code to test createContentByTitle
        //instance.createContentByTitle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContentCollection', function() {
      it('should call createContentCollection successfully', function(done) {
        //uncomment below and update the code to test createContentCollection
        //instance.createContentCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContentByInternalId', function() {
      it('should call deleteContentByInternalId successfully', function(done) {
        //uncomment below and update the code to test deleteContentByInternalId
        //instance.deleteContentByInternalId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContentByTitle', function() {
      it('should call deleteContentByTitle successfully', function(done) {
        //uncomment below and update the code to test deleteContentByTitle
        //instance.deleteContentByTitle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContentCollection', function() {
      it('should call deleteContentCollection successfully', function(done) {
        //uncomment below and update the code to test deleteContentCollection
        //instance.deleteContentCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllContents', function() {
      it('should call getAllContents successfully', function(done) {
        //uncomment below and update the code to test getAllContents
        //instance.getAllContents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContentByTitle', function() {
      it('should call getContentByTitle successfully', function(done) {
        //uncomment below and update the code to test getContentByTitle
        //instance.getContentByTitle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContentCollectionExists', function() {
      it('should call getContentCollectionExists successfully', function(done) {
        //uncomment below and update the code to test getContentCollectionExists
        //instance.getContentCollectionExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importMultipleContents', function() {
      it('should call importMultipleContents successfully', function(done) {
        //uncomment below and update the code to test importMultipleContents
        //instance.importMultipleContents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetContentCollection', function() {
      it('should call resetContentCollection successfully', function(done) {
        //uncomment below and update the code to test resetContentCollection
        //instance.resetContentCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContentByTitle', function() {
      it('should call updateContentByTitle successfully', function(done) {
        //uncomment below and update the code to test updateContentByTitle
        //instance.updateContentByTitle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
