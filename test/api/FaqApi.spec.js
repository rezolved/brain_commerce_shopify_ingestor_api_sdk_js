/**
 * Brain Commerce Shopify Ingestor API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrainCommerceShopifyIngestorApi);
  }
}(this, function(expect, BrainCommerceShopifyIngestorApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrainCommerceShopifyIngestorApi.FaqApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FaqApi', function() {
    describe('createFaqByQuestion', function() {
      it('should call createFaqByQuestion successfully', function(done) {
        //uncomment below and update the code to test createFaqByQuestion
        //instance.createFaqByQuestion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFaqCollection', function() {
      it('should call createFaqCollection successfully', function(done) {
        //uncomment below and update the code to test createFaqCollection
        //instance.createFaqCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFaqByInternalId', function() {
      it('should call deleteFaqByInternalId successfully', function(done) {
        //uncomment below and update the code to test deleteFaqByInternalId
        //instance.deleteFaqByInternalId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFaqByQuestion', function() {
      it('should call deleteFaqByQuestion successfully', function(done) {
        //uncomment below and update the code to test deleteFaqByQuestion
        //instance.deleteFaqByQuestion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFaqCollection', function() {
      it('should call deleteFaqCollection successfully', function(done) {
        //uncomment below and update the code to test deleteFaqCollection
        //instance.deleteFaqCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllFaqs', function() {
      it('should call getAllFaqs successfully', function(done) {
        //uncomment below and update the code to test getAllFaqs
        //instance.getAllFaqs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFaqByQuestion', function() {
      it('should call getFaqByQuestion successfully', function(done) {
        //uncomment below and update the code to test getFaqByQuestion
        //instance.getFaqByQuestion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFaqCollectionExists', function() {
      it('should call getFaqCollectionExists successfully', function(done) {
        //uncomment below and update the code to test getFaqCollectionExists
        //instance.getFaqCollectionExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importMultipleFaqs', function() {
      it('should call importMultipleFaqs successfully', function(done) {
        //uncomment below and update the code to test importMultipleFaqs
        //instance.importMultipleFaqs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetFaqCollection', function() {
      it('should call resetFaqCollection successfully', function(done) {
        //uncomment below and update the code to test resetFaqCollection
        //instance.resetFaqCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFaqByQuestion', function() {
      it('should call updateFaqByQuestion successfully', function(done) {
        //uncomment below and update the code to test updateFaqByQuestion
        //instance.updateFaqByQuestion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
