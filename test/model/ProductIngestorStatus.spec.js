/**
 * Brain Commerce Shopify Ingestor API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrainCommerceShopifyIngestorApi);
  }
}(this, function(expect, BrainCommerceShopifyIngestorApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductIngestorStatus', function() {
    it('should create an instance of ProductIngestorStatus', function() {
      // uncomment below and update the code to test ProductIngestorStatus
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be.a(BrainCommerceShopifyIngestorApi.ProductIngestorStatus);
    });

    it('should have the property started_at (base name: "started_at")', function() {
      // uncomment below and update the code to test the property started_at
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property finished_at (base name: "finished_at")', function() {
      // uncomment below and update the code to test the property finished_at
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property updated_at (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updated_at
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property products_to_process (base name: "products_to_process")', function() {
      // uncomment below and update the code to test the property products_to_process
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property product_processed (base name: "product_processed")', function() {
      // uncomment below and update the code to test the property product_processed
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property batch_to_processed (base name: "batch_to_processed")', function() {
      // uncomment below and update the code to test the property batch_to_processed
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property batch_processed (base name: "batch_processed")', function() {
      // uncomment below and update the code to test the property batch_processed
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property current_batch (base name: "current_batch")', function() {
      // uncomment below and update the code to test the property current_batch
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property previous_page_url (base name: "previous_page_url")', function() {
      // uncomment below and update the code to test the property previous_page_url
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

    it('should have the property next_page_url (base name: "next_page_url")', function() {
      // uncomment below and update the code to test the property next_page_url
      //var instance = new BrainCommerceShopifyIngestorApi.ProductIngestorStatus();
      //expect(instance).to.be();
    });

  });

}));
